// Prisma Schema file

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id            Int           @id @default(autoincrement())
  email         String        @unique
  password      String
  lname         String
  fname         String
  bday          DateTime
  address       String
  gender        String

  customer      Customer?
  agent         Agent?
  admin         Admin?
}

model Customer {
  userId        Int           @id @unique

  user          User          @relation(fields: [userId], references: [id], onDelete: Cascade)

  rented        Rent[]
}

model Agent {
  userId        Int           @id @unique

  user          User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  properties    Property[]
}

model Admin {
  userId        Int           @id @unique

  user          User          @relation(fields: [userId], references: [id], onDelete: Cascade)

  events        Event[]
}

model Event {
  id            Int           @id @default(autoincrement())
  title         String 
  content       String
  address       String
  startAt       DateTime
  image         String        // image file names

  pubId         Int

  publisher     Admin?        @relation(fields: [pubId], references: [userId], onUpdate: Cascade, onDelete: NoAction)
}

model Property {
  id            Int           @id @default(autoincrement())
  name          String    
  location      String
  price         Decimal
  imageName     String        // image file names

  typeId        Int?
  agentId       Int?

  agent         Agent?        @relation(fields: [agentId], references: [userId], onUpdate: Cascade, onDelete: SetNull)
  type          PropertyType? @relation(fields: [typeId], references: [id], onUpdate: Cascade, onDelete: SetNull)

  rentals       Rent[]
}

model PropertyType {
  id            Int           @id @default(autoincrement())
  name          String
  properties    Property[]
}

model Rent {
  id            Int           @id @default(autoincrement())     
  price         Decimal
  rentedAt      DateTime      @default(now())
  endAt         DateTime?
  paidAt        DateTime?

  propertyId    Int
  tenantId      Int

  property      Property      @relation(fields: [propertyId], references: [id], onUpdate: Cascade, onDelete: NoAction)
  tenant        Customer      @relation(fields: [tenantId], references: [userId], onUpdate: Cascade, onDelete: NoAction)
}